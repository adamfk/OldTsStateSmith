//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar1.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class Grammar1Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, TRIGGER_LIST=9, 
		LINE_COMMENT=10, ML_COMMENT=11, CHAR_LITERAL=12, STRING=13, CODE_SYMBOLS=14, 
		LINE_ENDER=15, WS=16, IDENTIFIER=17, Digit=18;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "TRIGGER_LIST", 
		"NOT_NL_CR", "LINE_COMMENT", "ML_COMMENT", "ESCAPED_CHAR", "CHAR_LITERAL", 
		"NON_QUOTE_CHAR", "STRING_CHAR", "STRING", "CODE_SYMBOLS", "LINE_ENDER", 
		"WS", "IDENTIFIER", "IdentifierNondigit", "Nondigit", "Digit"
	};


	public Grammar1Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Grammar1Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'.'", "'['", "']'", "'/'", "'{'", "'}'", "'('", "')'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, "TRIGGER_LIST", 
		"LINE_COMMENT", "ML_COMMENT", "CHAR_LITERAL", "STRING", "CODE_SYMBOLS", 
		"LINE_ENDER", "WS", "IDENTIFIER", "Digit"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Grammar1.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static Grammar1Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x14', '\x9E', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', 
		'\n', '\x3', '\n', '\a', '\n', 'H', '\n', '\n', '\f', '\n', '\xE', '\n', 
		'K', '\v', '\n', '\x5', '\n', 'M', '\n', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', 
		'\f', '\a', '\f', 'W', '\n', '\f', '\f', '\f', '\xE', '\f', 'Z', '\v', 
		'\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\r', '\a', '\r', '\x62', '\n', '\r', '\f', '\r', '\xE', '\r', 
		'\x65', '\v', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x5', '\xF', 'p', '\n', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x5', '\x11', 'x', '\n', 
		'\x11', '\x3', '\x12', '\x3', '\x12', '\a', '\x12', '|', '\n', '\x12', 
		'\f', '\x12', '\xE', '\x12', '\x7F', '\v', '\x12', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x6', '\x14', '\x86', 
		'\n', '\x14', '\r', '\x14', '\xE', '\x14', '\x87', '\x3', '\x15', '\x6', 
		'\x15', '\x8B', '\n', '\x15', '\r', '\x15', '\xE', '\x15', '\x8C', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\a', 
		'\x16', '\x94', '\n', '\x16', '\f', '\x16', '\xE', '\x16', '\x97', '\v', 
		'\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', 
		'\x19', '\x3', '\x19', '\x3', '\x63', '\x2', '\x1A', '\x3', '\x3', '\x5', 
		'\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', 
		'\x11', '\n', '\x13', '\v', '\x15', '\x2', '\x17', '\f', '\x19', '\r', 
		'\x1B', '\x2', '\x1D', '\xE', '\x1F', '\x2', '!', '\x2', '#', '\xF', '%', 
		'\x10', '\'', '\x11', ')', '\x12', '+', '\x13', '-', '\x2', '/', '\x2', 
		'\x31', '\x14', '\x3', '\x2', '\t', '\x4', '\x2', '\f', '\f', '\xF', '\xF', 
		'\x3', '\x2', ')', ')', '\x3', '\x2', '$', '$', '\t', '\x2', '#', '#', 
		'\'', '(', ',', '\x31', '<', '\x41', '`', '`', '~', '~', '\x80', '\x80', 
		'\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x6', '\x2', '&', 
		'&', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x3', '\x2', '\x32', 
		';', '\x2', '\xA2', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '\x33', '\x3', '\x2', '\x2', '\x2', 
		'\x5', '\x35', '\x3', '\x2', '\x2', '\x2', '\a', '\x37', '\x3', '\x2', 
		'\x2', '\x2', '\t', '\x39', '\x3', '\x2', '\x2', '\x2', '\v', ';', '\x3', 
		'\x2', '\x2', '\x2', '\r', '=', '\x3', '\x2', '\x2', '\x2', '\xF', '?', 
		'\x3', '\x2', '\x2', '\x2', '\x11', '\x41', '\x3', '\x2', '\x2', '\x2', 
		'\x13', '\x43', '\x3', '\x2', '\x2', '\x2', '\x15', 'P', '\x3', '\x2', 
		'\x2', '\x2', '\x17', 'R', '\x3', '\x2', '\x2', '\x2', '\x19', ']', '\x3', 
		'\x2', '\x2', '\x2', '\x1B', 'i', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'l', '\x3', '\x2', '\x2', '\x2', '\x1F', 's', '\x3', '\x2', '\x2', '\x2', 
		'!', 'w', '\x3', '\x2', '\x2', '\x2', '#', 'y', '\x3', '\x2', '\x2', '\x2', 
		'%', '\x82', '\x3', '\x2', '\x2', '\x2', '\'', '\x85', '\x3', '\x2', '\x2', 
		'\x2', ')', '\x8A', '\x3', '\x2', '\x2', '\x2', '+', '\x90', '\x3', '\x2', 
		'\x2', '\x2', '-', '\x98', '\x3', '\x2', '\x2', '\x2', '/', '\x9A', '\x3', 
		'\x2', '\x2', '\x2', '\x31', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x33', 
		'\x34', '\a', '\x30', '\x2', '\x2', '\x34', '\x4', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\x36', '\a', ']', '\x2', '\x2', '\x36', '\x6', '\x3', 
		'\x2', '\x2', '\x2', '\x37', '\x38', '\a', '_', '\x2', '\x2', '\x38', 
		'\b', '\x3', '\x2', '\x2', '\x2', '\x39', ':', '\a', '\x31', '\x2', '\x2', 
		':', '\n', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', '}', '\x2', '\x2', 
		'<', '\f', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', '\x7F', '\x2', 
		'\x2', '>', '\xE', '\x3', '\x2', '\x2', '\x2', '?', '@', '\a', '*', '\x2', 
		'\x2', '@', '\x10', '\x3', '\x2', '\x2', '\x2', '\x41', '\x42', '\a', 
		'+', '\x2', '\x2', '\x42', '\x12', '\x3', '\x2', '\x2', '\x2', '\x43', 
		'L', '\a', '*', '\x2', '\x2', '\x44', 'M', '\x5', '+', '\x16', '\x2', 
		'\x45', '\x46', '\a', '.', '\x2', '\x2', '\x46', 'H', '\x5', '+', '\x16', 
		'\x2', 'G', '\x45', '\x3', '\x2', '\x2', '\x2', 'H', 'K', '\x3', '\x2', 
		'\x2', '\x2', 'I', 'G', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\x3', '\x2', 
		'\x2', '\x2', 'J', 'M', '\x3', '\x2', '\x2', '\x2', 'K', 'I', '\x3', '\x2', 
		'\x2', '\x2', 'L', '\x44', '\x3', '\x2', '\x2', '\x2', 'L', 'I', '\x3', 
		'\x2', '\x2', '\x2', 'M', 'N', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\a', 
		'+', '\x2', '\x2', 'O', '\x14', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', 
		'\n', '\x2', '\x2', '\x2', 'Q', '\x16', '\x3', '\x2', '\x2', '\x2', 'R', 
		'S', '\a', '\x31', '\x2', '\x2', 'S', 'T', '\a', '\x31', '\x2', '\x2', 
		'T', 'X', '\x3', '\x2', '\x2', '\x2', 'U', 'W', '\x5', '\x15', '\v', '\x2', 
		'V', 'U', '\x3', '\x2', '\x2', '\x2', 'W', 'Z', '\x3', '\x2', '\x2', '\x2', 
		'X', 'V', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\x3', '\x2', '\x2', '\x2', 
		'Y', '[', '\x3', '\x2', '\x2', '\x2', 'Z', 'X', '\x3', '\x2', '\x2', '\x2', 
		'[', '\\', '\x5', '\'', '\x14', '\x2', '\\', '\x18', '\x3', '\x2', '\x2', 
		'\x2', ']', '^', '\a', '\x31', '\x2', '\x2', '^', '_', '\a', ',', '\x2', 
		'\x2', '_', '\x63', '\x3', '\x2', '\x2', '\x2', '`', '\x62', '\v', '\x2', 
		'\x2', '\x2', '\x61', '`', '\x3', '\x2', '\x2', '\x2', '\x62', '\x65', 
		'\x3', '\x2', '\x2', '\x2', '\x63', '\x64', '\x3', '\x2', '\x2', '\x2', 
		'\x63', '\x61', '\x3', '\x2', '\x2', '\x2', '\x64', '\x66', '\x3', '\x2', 
		'\x2', '\x2', '\x65', '\x63', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', 
		'\a', ',', '\x2', '\x2', 'g', 'h', '\a', '\x31', '\x2', '\x2', 'h', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', 'i', 'j', '\a', '^', '\x2', '\x2', 'j', 'k', 
		'\v', '\x2', '\x2', '\x2', 'k', '\x1C', '\x3', '\x2', '\x2', '\x2', 'l', 
		'o', '\t', '\x3', '\x2', '\x2', 'm', 'p', '\x5', '\x1B', '\xE', '\x2', 
		'n', 'p', '\n', '\x3', '\x2', '\x2', 'o', 'm', '\x3', '\x2', '\x2', '\x2', 
		'o', 'n', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\x3', '\x2', '\x2', '\x2', 
		'q', 'r', '\t', '\x3', '\x2', '\x2', 'r', '\x1E', '\x3', '\x2', '\x2', 
		'\x2', 's', 't', '\n', '\x4', '\x2', '\x2', 't', ' ', '\x3', '\x2', '\x2', 
		'\x2', 'u', 'x', '\x5', '\x1B', '\xE', '\x2', 'v', 'x', '\x5', '\x1F', 
		'\x10', '\x2', 'w', 'u', '\x3', '\x2', '\x2', '\x2', 'w', 'v', '\x3', 
		'\x2', '\x2', '\x2', 'x', '\"', '\x3', '\x2', '\x2', '\x2', 'y', '}', 
		'\a', '$', '\x2', '\x2', 'z', '|', '\x5', '!', '\x11', '\x2', '{', 'z', 
		'\x3', '\x2', '\x2', '\x2', '|', '\x7F', '\x3', '\x2', '\x2', '\x2', '}', 
		'{', '\x3', '\x2', '\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', '\x2', 
		'~', '\x80', '\x3', '\x2', '\x2', '\x2', '\x7F', '}', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '\x81', '\a', '$', '\x2', '\x2', '\x81', '$', '\x3', '\x2', 
		'\x2', '\x2', '\x82', '\x83', '\t', '\x5', '\x2', '\x2', '\x83', '&', 
		'\x3', '\x2', '\x2', '\x2', '\x84', '\x86', '\t', '\x2', '\x2', '\x2', 
		'\x85', '\x84', '\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\x3', '\x2', 
		'\x2', '\x2', '\x87', '\x85', '\x3', '\x2', '\x2', '\x2', '\x87', '\x88', 
		'\x3', '\x2', '\x2', '\x2', '\x88', '(', '\x3', '\x2', '\x2', '\x2', '\x89', 
		'\x8B', '\t', '\x6', '\x2', '\x2', '\x8A', '\x89', '\x3', '\x2', '\x2', 
		'\x2', '\x8B', '\x8C', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8A', '\x3', 
		'\x2', '\x2', '\x2', '\x8C', '\x8D', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8E', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8F', '\b', '\x15', '\x2', 
		'\x2', '\x8F', '*', '\x3', '\x2', '\x2', '\x2', '\x90', '\x95', '\x5', 
		'-', '\x17', '\x2', '\x91', '\x94', '\x5', '-', '\x17', '\x2', '\x92', 
		'\x94', '\x5', '\x31', '\x19', '\x2', '\x93', '\x91', '\x3', '\x2', '\x2', 
		'\x2', '\x93', '\x92', '\x3', '\x2', '\x2', '\x2', '\x94', '\x97', '\x3', 
		'\x2', '\x2', '\x2', '\x95', '\x93', '\x3', '\x2', '\x2', '\x2', '\x95', 
		'\x96', '\x3', '\x2', '\x2', '\x2', '\x96', ',', '\x3', '\x2', '\x2', 
		'\x2', '\x97', '\x95', '\x3', '\x2', '\x2', '\x2', '\x98', '\x99', '\x5', 
		'/', '\x18', '\x2', '\x99', '.', '\x3', '\x2', '\x2', '\x2', '\x9A', '\x9B', 
		'\t', '\a', '\x2', '\x2', '\x9B', '\x30', '\x3', '\x2', '\x2', '\x2', 
		'\x9C', '\x9D', '\t', '\b', '\x2', '\x2', '\x9D', '\x32', '\x3', '\x2', 
		'\x2', '\x2', '\xE', '\x2', 'I', 'L', 'X', '\x63', 'o', 'w', '}', '\x87', 
		'\x8C', '\x93', '\x95', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
