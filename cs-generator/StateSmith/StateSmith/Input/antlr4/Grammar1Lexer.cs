//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar1.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class Grammar1Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, LINE_ENDER=9, 
		WS=10, IDENTIFIER=11, DIGIT=12, TRIGGER_LIST=13, LINE_COMMENT=14, ML_COMMENT=15, 
		CHAR_LITERAL=16, STRING=17, CODE_SYMBOLS=18;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "LINE_ENDER", 
		"WS", "IDENTIFIER", "IDENTIFIER_NON_DIGIT", "DIGIT", "TRIGGER_LIST", "NOT_NL_CR", 
		"LINE_COMMENT", "ML_COMMENT", "ESCAPED_CHAR", "CHAR_LITERAL", "NON_QUOTE_CHAR", 
		"STRING_CHAR", "STRING", "CODE_SYMBOLS"
	};


	public Grammar1Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Grammar1Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'.'", "'['", "']'", "'/'", "'{'", "'}'", "'('", "')'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, "LINE_ENDER", "WS", 
		"IDENTIFIER", "DIGIT", "TRIGGER_LIST", "LINE_COMMENT", "ML_COMMENT", "CHAR_LITERAL", 
		"STRING", "CODE_SYMBOLS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Grammar1.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static Grammar1Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x14', '\x9A', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x6', '\n', '\x43', '\n', '\n', '\r', '\n', 
		'\xE', '\n', '\x44', '\x3', '\v', '\x6', '\v', 'H', '\n', '\v', '\r', 
		'\v', '\xE', '\v', 'I', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\a', '\f', 'Q', '\n', '\f', '\f', '\f', '\xE', '\f', 
		'T', '\v', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\a', '\xF', '^', 
		'\n', '\xF', '\f', '\xF', '\xE', '\xF', '\x61', '\v', '\xF', '\x5', '\xF', 
		'\x63', '\n', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\a', 
		'\x11', 'm', '\n', '\x11', '\f', '\x11', '\xE', '\x11', 'p', '\v', '\x11', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\a', '\x12', 'x', '\n', '\x12', '\f', '\x12', '\xE', '\x12', 
		'{', '\v', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', 
		'\x14', '\x5', '\x14', '\x86', '\n', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x5', '\x16', 
		'\x8E', '\n', '\x16', '\x3', '\x17', '\x3', '\x17', '\a', '\x17', '\x92', 
		'\n', '\x17', '\f', '\x17', '\xE', '\x17', '\x95', '\v', '\x17', '\x3', 
		'\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', 'y', '\x2', 
		'\x19', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', 
		'\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', 
		'\r', '\x19', '\x2', '\x1B', '\xE', '\x1D', '\xF', '\x1F', '\x2', '!', 
		'\x10', '#', '\x11', '%', '\x2', '\'', '\x12', ')', '\x2', '+', '\x2', 
		'-', '\x13', '/', '\x14', '\x3', '\x2', '\t', '\x4', '\x2', '\f', '\f', 
		'\xF', '\xF', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x6', 
		'\x2', '&', '&', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x3', '\x2', 
		'\x32', ';', '\x3', '\x2', ')', ')', '\x3', '\x2', '$', '$', '\t', '\x2', 
		'#', '#', '\'', '(', ',', '\x31', '<', '\x41', '`', '`', '~', '~', '\x80', 
		'\x80', '\x2', '\x9F', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'/', '\x3', '\x2', '\x2', '\x2', '\x3', '\x31', '\x3', '\x2', '\x2', '\x2', 
		'\x5', '\x33', '\x3', '\x2', '\x2', '\x2', '\a', '\x35', '\x3', '\x2', 
		'\x2', '\x2', '\t', '\x37', '\x3', '\x2', '\x2', '\x2', '\v', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\r', ';', '\x3', '\x2', '\x2', '\x2', '\xF', 
		'=', '\x3', '\x2', '\x2', '\x2', '\x11', '?', '\x3', '\x2', '\x2', '\x2', 
		'\x13', '\x42', '\x3', '\x2', '\x2', '\x2', '\x15', 'G', '\x3', '\x2', 
		'\x2', '\x2', '\x17', 'M', '\x3', '\x2', '\x2', '\x2', '\x19', 'U', '\x3', 
		'\x2', '\x2', '\x2', '\x1B', 'W', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'Y', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x66', '\x3', '\x2', '\x2', 
		'\x2', '!', 'h', '\x3', '\x2', '\x2', '\x2', '#', 's', '\x3', '\x2', '\x2', 
		'\x2', '%', '\x7F', '\x3', '\x2', '\x2', '\x2', '\'', '\x82', '\x3', '\x2', 
		'\x2', '\x2', ')', '\x89', '\x3', '\x2', '\x2', '\x2', '+', '\x8D', '\x3', 
		'\x2', '\x2', '\x2', '-', '\x8F', '\x3', '\x2', '\x2', '\x2', '/', '\x98', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\x32', '\a', '\x30', '\x2', '\x2', 
		'\x32', '\x4', '\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\a', ']', 
		'\x2', '\x2', '\x34', '\x6', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', 
		'\a', '_', '\x2', '\x2', '\x36', '\b', '\x3', '\x2', '\x2', '\x2', '\x37', 
		'\x38', '\a', '\x31', '\x2', '\x2', '\x38', '\n', '\x3', '\x2', '\x2', 
		'\x2', '\x39', ':', '\a', '}', '\x2', '\x2', ':', '\f', '\x3', '\x2', 
		'\x2', '\x2', ';', '<', '\a', '\x7F', '\x2', '\x2', '<', '\xE', '\x3', 
		'\x2', '\x2', '\x2', '=', '>', '\a', '*', '\x2', '\x2', '>', '\x10', '\x3', 
		'\x2', '\x2', '\x2', '?', '@', '\a', '+', '\x2', '\x2', '@', '\x12', '\x3', 
		'\x2', '\x2', '\x2', '\x41', '\x43', '\t', '\x2', '\x2', '\x2', '\x42', 
		'\x41', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\x3', '\x2', '\x2', 
		'\x2', '\x44', '\x42', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\x14', '\x3', '\x2', '\x2', '\x2', '\x46', 
		'H', '\t', '\x3', '\x2', '\x2', 'G', '\x46', '\x3', '\x2', '\x2', '\x2', 
		'H', 'I', '\x3', '\x2', '\x2', '\x2', 'I', 'G', '\x3', '\x2', '\x2', '\x2', 
		'I', 'J', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\x3', '\x2', '\x2', '\x2', 
		'K', 'L', '\b', '\v', '\x2', '\x2', 'L', '\x16', '\x3', '\x2', '\x2', 
		'\x2', 'M', 'R', '\x5', '\x19', '\r', '\x2', 'N', 'Q', '\x5', '\x19', 
		'\r', '\x2', 'O', 'Q', '\x5', '\x1B', '\xE', '\x2', 'P', 'N', '\x3', '\x2', 
		'\x2', '\x2', 'P', 'O', '\x3', '\x2', '\x2', '\x2', 'Q', 'T', '\x3', '\x2', 
		'\x2', '\x2', 'R', 'P', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\x3', '\x2', 
		'\x2', '\x2', 'S', '\x18', '\x3', '\x2', '\x2', '\x2', 'T', 'R', '\x3', 
		'\x2', '\x2', '\x2', 'U', 'V', '\t', '\x4', '\x2', '\x2', 'V', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', 'W', 'X', '\t', '\x5', '\x2', '\x2', 'X', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', 'Y', '\x62', '\a', '*', '\x2', '\x2', 
		'Z', '\x63', '\x5', '\x17', '\f', '\x2', '[', '\\', '\a', '.', '\x2', 
		'\x2', '\\', '^', '\x5', '\x17', '\f', '\x2', ']', '[', '\x3', '\x2', 
		'\x2', '\x2', '^', '\x61', '\x3', '\x2', '\x2', '\x2', '_', ']', '\x3', 
		'\x2', '\x2', '\x2', '_', '`', '\x3', '\x2', '\x2', '\x2', '`', '\x63', 
		'\x3', '\x2', '\x2', '\x2', '\x61', '_', '\x3', '\x2', '\x2', '\x2', '\x62', 
		'Z', '\x3', '\x2', '\x2', '\x2', '\x62', '_', '\x3', '\x2', '\x2', '\x2', 
		'\x63', '\x64', '\x3', '\x2', '\x2', '\x2', '\x64', '\x65', '\a', '+', 
		'\x2', '\x2', '\x65', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', 
		'\n', '\x2', '\x2', '\x2', 'g', ' ', '\x3', '\x2', '\x2', '\x2', 'h', 
		'i', '\a', '\x31', '\x2', '\x2', 'i', 'j', '\a', '\x31', '\x2', '\x2', 
		'j', 'n', '\x3', '\x2', '\x2', '\x2', 'k', 'm', '\x5', '\x1F', '\x10', 
		'\x2', 'l', 'k', '\x3', '\x2', '\x2', '\x2', 'm', 'p', '\x3', '\x2', '\x2', 
		'\x2', 'n', 'l', '\x3', '\x2', '\x2', '\x2', 'n', 'o', '\x3', '\x2', '\x2', 
		'\x2', 'o', 'q', '\x3', '\x2', '\x2', '\x2', 'p', 'n', '\x3', '\x2', '\x2', 
		'\x2', 'q', 'r', '\x5', '\x13', '\n', '\x2', 'r', '\"', '\x3', '\x2', 
		'\x2', '\x2', 's', 't', '\a', '\x31', '\x2', '\x2', 't', 'u', '\a', ',', 
		'\x2', '\x2', 'u', 'y', '\x3', '\x2', '\x2', '\x2', 'v', 'x', '\v', '\x2', 
		'\x2', '\x2', 'w', 'v', '\x3', '\x2', '\x2', '\x2', 'x', '{', '\x3', '\x2', 
		'\x2', '\x2', 'y', 'z', '\x3', '\x2', '\x2', '\x2', 'y', 'w', '\x3', '\x2', 
		'\x2', '\x2', 'z', '|', '\x3', '\x2', '\x2', '\x2', '{', 'y', '\x3', '\x2', 
		'\x2', '\x2', '|', '}', '\a', ',', '\x2', '\x2', '}', '~', '\a', '\x31', 
		'\x2', '\x2', '~', '$', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\a', 
		'^', '\x2', '\x2', '\x80', '\x81', '\v', '\x2', '\x2', '\x2', '\x81', 
		'&', '\x3', '\x2', '\x2', '\x2', '\x82', '\x85', '\t', '\x6', '\x2', '\x2', 
		'\x83', '\x86', '\x5', '%', '\x13', '\x2', '\x84', '\x86', '\n', '\x6', 
		'\x2', '\x2', '\x85', '\x83', '\x3', '\x2', '\x2', '\x2', '\x85', '\x84', 
		'\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\x3', '\x2', '\x2', '\x2', 
		'\x87', '\x88', '\t', '\x6', '\x2', '\x2', '\x88', '(', '\x3', '\x2', 
		'\x2', '\x2', '\x89', '\x8A', '\n', '\a', '\x2', '\x2', '\x8A', '*', '\x3', 
		'\x2', '\x2', '\x2', '\x8B', '\x8E', '\x5', '%', '\x13', '\x2', '\x8C', 
		'\x8E', '\x5', ')', '\x15', '\x2', '\x8D', '\x8B', '\x3', '\x2', '\x2', 
		'\x2', '\x8D', '\x8C', '\x3', '\x2', '\x2', '\x2', '\x8E', ',', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x93', '\a', '$', '\x2', '\x2', '\x90', 
		'\x92', '\x5', '+', '\x16', '\x2', '\x91', '\x90', '\x3', '\x2', '\x2', 
		'\x2', '\x92', '\x95', '\x3', '\x2', '\x2', '\x2', '\x93', '\x91', '\x3', 
		'\x2', '\x2', '\x2', '\x93', '\x94', '\x3', '\x2', '\x2', '\x2', '\x94', 
		'\x96', '\x3', '\x2', '\x2', '\x2', '\x95', '\x93', '\x3', '\x2', '\x2', 
		'\x2', '\x96', '\x97', '\a', '$', '\x2', '\x2', '\x97', '.', '\x3', '\x2', 
		'\x2', '\x2', '\x98', '\x99', '\t', '\b', '\x2', '\x2', '\x99', '\x30', 
		'\x3', '\x2', '\x2', '\x2', '\xE', '\x2', '\x44', 'I', 'P', 'R', '_', 
		'\x62', 'n', 'y', '\x85', '\x8D', '\x93', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
