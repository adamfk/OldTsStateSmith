//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar1.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class Grammar1Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, LINE_ENDER=13, IDENTIFIER=14, LINE_COMMENT=15, 
		STAR_COMMENT=16, STRING=17, TICK_STRING=18, DIGIT=19, PERIOD=20, COMMA=21, 
		CODE_SYMBOL=22, HWS=23;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "LINE_ENDER", "IDENTIFIER", "NOT_NL_CR", "LINE_COMMENT", 
		"STAR_COMMENT", "ESCAPED_CHAR", "NON_QUOTE_CHAR", "STRING_CHAR", "STRING", 
		"TICK_STRING", "IDENTIFIER_NON_DIGIT", "DIGIT", "PERIOD", "COMMA", "CODE_SYMBOL", 
		"HWS"
	};


	public Grammar1Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Grammar1Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'['", "']'", "'/'", "'::'", "'->'", "'{'", "'}'", 
		"'-'", "'+'", "'e'", null, null, null, null, null, null, null, "'.'", 
		"','"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "LINE_ENDER", "IDENTIFIER", "LINE_COMMENT", "STAR_COMMENT", "STRING", 
		"TICK_STRING", "DIGIT", "PERIOD", "COMMA", "CODE_SYMBOL", "HWS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Grammar1.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static Grammar1Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x19', '\xA7', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', 
		'\x3', '\xE', '\x6', '\xE', 'W', '\n', '\xE', '\r', '\xE', '\xE', '\xE', 
		'X', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\a', '\xF', '^', '\n', 
		'\xF', '\f', '\xF', '\xE', '\xF', '\x61', '\v', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', 
		'\a', '\x11', 'i', '\n', '\x11', '\f', '\x11', '\xE', '\x11', 'l', '\v', 
		'\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x12', '\a', '\x12', 't', '\n', '\x12', '\f', '\x12', 
		'\xE', '\x12', 'w', '\v', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x15', '\x3', '\x15', '\x5', '\x15', '\x83', '\n', '\x15', 
		'\x3', '\x16', '\x3', '\x16', '\a', '\x16', '\x87', '\n', '\x16', '\f', 
		'\x16', '\xE', '\x16', '\x8A', '\v', '\x16', '\x3', '\x16', '\x3', '\x16', 
		'\x3', '\x17', '\x3', '\x17', '\a', '\x17', '\x90', '\n', '\x17', '\f', 
		'\x17', '\xE', '\x17', '\x93', '\v', '\x17', '\x3', '\x17', '\x3', '\x17', 
		'\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', 
		'\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', 
		'\x5', '\x1C', '\xA1', '\n', '\x1C', '\x3', '\x1D', '\x6', '\x1D', '\xA4', 
		'\n', '\x1D', '\r', '\x1D', '\xE', '\x1D', '\xA5', '\x3', 'u', '\x2', 
		'\x1E', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', 
		'\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', 
		'\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x2', '!', 
		'\x11', '#', '\x12', '%', '\x2', '\'', '\x2', ')', '\x2', '+', '\x13', 
		'-', '\x14', '/', '\x2', '\x31', '\x15', '\x33', '\x16', '\x35', '\x17', 
		'\x37', '\x18', '\x39', '\x19', '\x3', '\x2', '\t', '\x4', '\x2', '\f', 
		'\f', '\xF', '\xF', '\x3', '\x2', '$', '$', '\x3', '\x2', ')', ')', '\x6', 
		'\x2', '&', '&', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x3', '\x2', 
		'\x32', ';', '\v', '\x2', '#', '#', '\'', '(', ',', '-', '/', '/', '\x31', 
		'\x31', '<', '\x41', '`', '`', '~', '~', '\x80', '\x80', '\x4', '\x2', 
		'\v', '\v', '\"', '\"', '\x2', '\xAB', '\x2', '\x3', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x35', '\x3', '\x2', '\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x39', '\x3', '\x2', '\x2', '\x2', '\x3', ';', '\x3', '\x2', 
		'\x2', '\x2', '\x5', '=', '\x3', '\x2', '\x2', '\x2', '\a', '?', '\x3', 
		'\x2', '\x2', '\x2', '\t', '\x41', '\x3', '\x2', '\x2', '\x2', '\v', '\x43', 
		'\x3', '\x2', '\x2', '\x2', '\r', '\x45', '\x3', '\x2', '\x2', '\x2', 
		'\xF', 'H', '\x3', '\x2', '\x2', '\x2', '\x11', 'K', '\x3', '\x2', '\x2', 
		'\x2', '\x13', 'M', '\x3', '\x2', '\x2', '\x2', '\x15', 'O', '\x3', '\x2', 
		'\x2', '\x2', '\x17', 'Q', '\x3', '\x2', '\x2', '\x2', '\x19', 'S', '\x3', 
		'\x2', '\x2', '\x2', '\x1B', 'V', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'Z', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x62', '\x3', '\x2', '\x2', 
		'\x2', '!', '\x64', '\x3', '\x2', '\x2', '\x2', '#', 'o', '\x3', '\x2', 
		'\x2', '\x2', '%', '{', '\x3', '\x2', '\x2', '\x2', '\'', '~', '\x3', 
		'\x2', '\x2', '\x2', ')', '\x82', '\x3', '\x2', '\x2', '\x2', '+', '\x84', 
		'\x3', '\x2', '\x2', '\x2', '-', '\x8D', '\x3', '\x2', '\x2', '\x2', '/', 
		'\x96', '\x3', '\x2', '\x2', '\x2', '\x31', '\x98', '\x3', '\x2', '\x2', 
		'\x2', '\x33', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x35', '\x9C', '\x3', 
		'\x2', '\x2', '\x2', '\x37', '\xA0', '\x3', '\x2', '\x2', '\x2', '\x39', 
		'\xA3', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', '*', '\x2', '\x2', 
		'<', '\x4', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', '+', '\x2', '\x2', 
		'>', '\x6', '\x3', '\x2', '\x2', '\x2', '?', '@', '\a', ']', '\x2', '\x2', 
		'@', '\b', '\x3', '\x2', '\x2', '\x2', '\x41', '\x42', '\a', '_', '\x2', 
		'\x2', '\x42', '\n', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\a', 
		'\x31', '\x2', '\x2', '\x44', '\f', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x46', '\a', '<', '\x2', '\x2', '\x46', 'G', '\a', '<', '\x2', '\x2', 
		'G', '\xE', '\x3', '\x2', '\x2', '\x2', 'H', 'I', '\a', '/', '\x2', '\x2', 
		'I', 'J', '\a', '@', '\x2', '\x2', 'J', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'K', 'L', '\a', '}', '\x2', '\x2', 'L', '\x12', '\x3', '\x2', '\x2', '\x2', 
		'M', 'N', '\a', '\x7F', '\x2', '\x2', 'N', '\x14', '\x3', '\x2', '\x2', 
		'\x2', 'O', 'P', '\a', '/', '\x2', '\x2', 'P', '\x16', '\x3', '\x2', '\x2', 
		'\x2', 'Q', 'R', '\a', '-', '\x2', '\x2', 'R', '\x18', '\x3', '\x2', '\x2', 
		'\x2', 'S', 'T', '\a', 'g', '\x2', '\x2', 'T', '\x1A', '\x3', '\x2', '\x2', 
		'\x2', 'U', 'W', '\t', '\x2', '\x2', '\x2', 'V', 'U', '\x3', '\x2', '\x2', 
		'\x2', 'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', 'V', '\x3', '\x2', '\x2', 
		'\x2', 'X', 'Y', '\x3', '\x2', '\x2', '\x2', 'Y', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', 'Z', '_', '\x5', '/', '\x18', '\x2', '[', '^', '\x5', '/', 
		'\x18', '\x2', '\\', '^', '\x5', '\x31', '\x19', '\x2', ']', '[', '\x3', 
		'\x2', '\x2', '\x2', ']', '\\', '\x3', '\x2', '\x2', '\x2', '^', '\x61', 
		'\x3', '\x2', '\x2', '\x2', '_', ']', '\x3', '\x2', '\x2', '\x2', '_', 
		'`', '\x3', '\x2', '\x2', '\x2', '`', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'\x61', '_', '\x3', '\x2', '\x2', '\x2', '\x62', '\x63', '\n', '\x2', 
		'\x2', '\x2', '\x63', ' ', '\x3', '\x2', '\x2', '\x2', '\x64', '\x65', 
		'\a', '\x31', '\x2', '\x2', '\x65', '\x66', '\a', '\x31', '\x2', '\x2', 
		'\x66', 'j', '\x3', '\x2', '\x2', '\x2', 'g', 'i', '\x5', '\x1F', '\x10', 
		'\x2', 'h', 'g', '\x3', '\x2', '\x2', '\x2', 'i', 'l', '\x3', '\x2', '\x2', 
		'\x2', 'j', 'h', '\x3', '\x2', '\x2', '\x2', 'j', 'k', '\x3', '\x2', '\x2', 
		'\x2', 'k', 'm', '\x3', '\x2', '\x2', '\x2', 'l', 'j', '\x3', '\x2', '\x2', 
		'\x2', 'm', 'n', '\x5', '\x1B', '\xE', '\x2', 'n', '\"', '\x3', '\x2', 
		'\x2', '\x2', 'o', 'p', '\a', '\x31', '\x2', '\x2', 'p', 'q', '\a', ',', 
		'\x2', '\x2', 'q', 'u', '\x3', '\x2', '\x2', '\x2', 'r', 't', '\v', '\x2', 
		'\x2', '\x2', 's', 'r', '\x3', '\x2', '\x2', '\x2', 't', 'w', '\x3', '\x2', 
		'\x2', '\x2', 'u', 'v', '\x3', '\x2', '\x2', '\x2', 'u', 's', '\x3', '\x2', 
		'\x2', '\x2', 'v', 'x', '\x3', '\x2', '\x2', '\x2', 'w', 'u', '\x3', '\x2', 
		'\x2', '\x2', 'x', 'y', '\a', ',', '\x2', '\x2', 'y', 'z', '\a', '\x31', 
		'\x2', '\x2', 'z', '$', '\x3', '\x2', '\x2', '\x2', '{', '|', '\a', '^', 
		'\x2', '\x2', '|', '}', '\v', '\x2', '\x2', '\x2', '}', '&', '\x3', '\x2', 
		'\x2', '\x2', '~', '\x7F', '\n', '\x3', '\x2', '\x2', '\x7F', '(', '\x3', 
		'\x2', '\x2', '\x2', '\x80', '\x83', '\x5', '%', '\x13', '\x2', '\x81', 
		'\x83', '\x5', '\'', '\x14', '\x2', '\x82', '\x80', '\x3', '\x2', '\x2', 
		'\x2', '\x82', '\x81', '\x3', '\x2', '\x2', '\x2', '\x83', '*', '\x3', 
		'\x2', '\x2', '\x2', '\x84', '\x88', '\a', '$', '\x2', '\x2', '\x85', 
		'\x87', '\x5', ')', '\x15', '\x2', '\x86', '\x85', '\x3', '\x2', '\x2', 
		'\x2', '\x87', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x88', '\x86', '\x3', 
		'\x2', '\x2', '\x2', '\x88', '\x89', '\x3', '\x2', '\x2', '\x2', '\x89', 
		'\x8B', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x88', '\x3', '\x2', '\x2', 
		'\x2', '\x8B', '\x8C', '\a', '$', '\x2', '\x2', '\x8C', ',', '\x3', '\x2', 
		'\x2', '\x2', '\x8D', '\x91', '\t', '\x4', '\x2', '\x2', '\x8E', '\x90', 
		'\x5', ')', '\x15', '\x2', '\x8F', '\x8E', '\x3', '\x2', '\x2', '\x2', 
		'\x90', '\x93', '\x3', '\x2', '\x2', '\x2', '\x91', '\x8F', '\x3', '\x2', 
		'\x2', '\x2', '\x91', '\x92', '\x3', '\x2', '\x2', '\x2', '\x92', '\x94', 
		'\x3', '\x2', '\x2', '\x2', '\x93', '\x91', '\x3', '\x2', '\x2', '\x2', 
		'\x94', '\x95', '\t', '\x4', '\x2', '\x2', '\x95', '.', '\x3', '\x2', 
		'\x2', '\x2', '\x96', '\x97', '\t', '\x5', '\x2', '\x2', '\x97', '\x30', 
		'\x3', '\x2', '\x2', '\x2', '\x98', '\x99', '\t', '\x6', '\x2', '\x2', 
		'\x99', '\x32', '\x3', '\x2', '\x2', '\x2', '\x9A', '\x9B', '\a', '\x30', 
		'\x2', '\x2', '\x9B', '\x34', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9D', 
		'\a', '.', '\x2', '\x2', '\x9D', '\x36', '\x3', '\x2', '\x2', '\x2', '\x9E', 
		'\xA1', '\t', '\a', '\x2', '\x2', '\x9F', '\xA1', '\x5', '\x33', '\x1A', 
		'\x2', '\xA0', '\x9E', '\x3', '\x2', '\x2', '\x2', '\xA0', '\x9F', '\x3', 
		'\x2', '\x2', '\x2', '\xA1', '\x38', '\x3', '\x2', '\x2', '\x2', '\xA2', 
		'\xA4', '\t', '\b', '\x2', '\x2', '\xA3', '\xA2', '\x3', '\x2', '\x2', 
		'\x2', '\xA4', '\xA5', '\x3', '\x2', '\x2', '\x2', '\xA5', '\xA3', '\x3', 
		'\x2', '\x2', '\x2', '\xA5', '\xA6', '\x3', '\x2', '\x2', '\x2', '\xA6', 
		':', '\x3', '\x2', '\x2', '\x2', '\r', '\x2', 'X', ']', '_', 'j', 'u', 
		'\x82', '\x88', '\x91', '\xA0', '\xA5', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
